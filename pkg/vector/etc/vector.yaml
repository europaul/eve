sources:
  dev_keep:
    type: socket
    mode: unix_stream       # listen on a Unix domain stream socket
    path: "${DEV_KEEP_SOURCE_SOCK:-/run/devKeep_source.sock}"  # the UDS file to bind to

  dev_upload:
    type: socket
    mode: unix_stream
    path: "${DEV_UPLOAD_SOURCE_SOCK:-/run/devUpload_source.sock}"

  # vector_logs:
  #   type: internal_logs

transforms:
  parse_json_keep:
    type: remap
    inputs:
      - dev_keep
    source: |
      . = parse_json!(.message)

  parse_json_upload:
    type: remap
    inputs:
      - dev_upload
    source: |
      . = parse_json!(.message)

  filter_upload:
    type: filter
    inputs:
      - parse_json_upload
    condition: |
      # Coerce `.source` to a string; if it fails, use "".
      src = to_string(.source) ?? "";

      # Now `src` is always a valid string (possibly empty).
      starts_with(src, "vector") || starts_with(src, "newlog")

sinks:
  keep_sent_queue_file:
    type: file
    inputs:
      - dev_keep
    path: "/persist/vector/keepSentQueue/dev.log.keep.%Y-%m-%d.log.gz"
    compression: gzip          # compress output with gzip
    encoding:
      codec: json              # write events as JSON objects

  dev_upload_file:
    type: file
    inputs:
      - filter_upload
    path: "/persist/vector/devUpload/dev.log.upload.%Y-%m-%d.log.gz"
    compression: gzip
    encoding:
      codec: json

  keep_sent_queue_socket:
    type: socket
    inputs:
      - parse_json_keep
    mode: unix_stream
    path: "${DEV_KEEP_SINK_SOCK:-/run/devKeep_sink.sock}"
    encoding:
      codec: json              # write events as JSON objects
    buffer:
      type: disk
      max_size: 268435488  # 256 MB
      when_full: block

  dev_upload_socket:
    type: socket
    inputs:
      - filter_upload
    mode: unix_stream
    path: "${DEV_UPLOAD_SINK_SOCK:-/run/devUpload_sink.sock}"
    encoding:
      codec: json
    buffer:
      type: disk
      max_size: 268435488  # 256 MB
      when_full: block

  # vector_logs_to_file:
  #   type: file
  #   inputs:
  #     - vector_logs
  #   path: "/persist/vector/logs/%Y-%m-%d.log"
  #   encoding:
  #     codec: json
